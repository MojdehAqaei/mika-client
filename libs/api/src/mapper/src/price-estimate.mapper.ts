import { PriceEstimateDto } from "@api/lib/dto";
import { Mapper } from "@api/lib/misc";
import { PriceEstimateModel } from "@domain/lib/purchase-and-orders";
import { AttachmentMapper } from "./attachment.mapper";
import { OrderMapper } from "./order.mapper";
import { PriceEstimateItemMapper } from "./price-estimate-item.mapper";

export class PriceEstimateMapper implements Mapper<PriceEstimateModel, PriceEstimateDto> {
  mapFrom(param: PriceEstimateModel): PriceEstimateDto {
    return {
      documentNumber: param.autoGeneratedCode,
      order: { id: param.order?.id },
      estimateDate: param.date,
      fiscalPeriod: { id: param.fiscalYearId },
      priceEstimateItems: param.priceEstimateItems?.map(each => new PriceEstimateItemMapper().mapFrom(each)),
      priceEstimateDocuments: param.attachedFiles?.map(each => new AttachmentMapper().mapFrom(each))
    };
  }

  mapTo(param: PriceEstimateDto): PriceEstimateModel {
    return {
      autoGeneratedCode: param.order?.documentNumber,
      order: param.order ? new OrderMapper().mapTo(param.order) : undefined,
      date: param.estimateDate || new Date(),
      fiscalYearId: param.fiscalPeriod?.id,
      priceEstimateItems: param.priceEstimateItems?.map(each => new PriceEstimateItemMapper().mapTo(each)),
      attachedFiles: param.priceEstimateDocuments?.map(each => new AttachmentMapper().mapTo(each))
    };
  }

}
