import { WarehousingModel, warehousingStateDataMapper } from '@domain/lib/stockroom';
import { WarehousingDto } from '../../dto';
import { Mapper } from '../../misc';
import { AttachmentMapper } from './attachment.mapper';
import { formatDate } from '@sadad/component-lib/src/lib/date-picker';

export class WarehousingMapper implements Mapper<WarehousingModel, WarehousingDto> {
  mapFrom(param: WarehousingModel): WarehousingDto {
    return {
      id: param.id,
      fiscalPeriod: {
        id: param.fiscalYearId,
        title: param.fiscalYearTitle
      },
      documentNumber: param.autoGeneratedCode,
      description: param.description,
      stage: param.state,
      inventory: { id: param.stockroomId },
      startDate: param.startDate,
      endDate: param.endDate,
      inventoryCountAttachments: param.attachedFiles?.map(each => new AttachmentMapper().mapFrom(each))
    };
  }

  mapTo(param: WarehousingDto): WarehousingModel {
    return {
      id: param.id,
      state: param.stage,
      stateString: param.stage && warehousingStateDataMapper.has(param.stage) ? warehousingStateDataMapper.get(param.stage) : '',
      autoGeneratedCode: param.documentNumber,
      description: param.description,
      stockroomId: param.inventory?.id,
      stockroomTitle: param.inventory?.title,
      fiscalYearId: param.fiscalPeriod?.id,
      fiscalYearTitle: param.fiscalPeriod?.title,
      // @ts-ignore
      startDate: new Date(param.startDate),
      startDatePersian: param.startDate ? formatDate(param.startDate, 'YYYY/MM/DD') : '',
      // @ts-ignore
      endDate: new Date(param.endDate),
      endDatePersian: param.endDate ? formatDate(param.endDate, 'YYYY/MM/DD') : '',
      attachedFiles: param.inventoryCountAttachments?.map(each => new AttachmentMapper().mapTo(each)),
      totalElements: param.totalElements,
    };
  }

}
